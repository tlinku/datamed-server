apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes/
    kompose.service.expose: datamed.local
    kompose.service.expose.tls-secret: datamed-tls
    kompose.version: 1.36.0 (HEAD)
  labels:
    io.kompose.service: backend
  name: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      io.kompose.service: backend
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes/
        kompose.service.expose: datamed.local
        kompose.service.expose.tls-secret: datamed-tls
        kompose.version: 1.36.0 (HEAD)
      labels:
        io.kompose.service: backend
    spec:
      containers:
        - env:
            - name: FLASK_ENV
              value: production
            - name: KEYCLOAK_CLIENT_ID
              value: datamed-client
            - name: KEYCLOAK_CLIENT_SECRET
              value: ""
            - name: KEYCLOAK_REALM
              value: datamed
            - name: KEYCLOAK_URL
              value: http://keycloak:8080
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: MINIO_ACCESS_KEY
            - name: MINIO_BUCKET
              value: prescriptions
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: MINIO_SECRET_KEY
            - name: MINIO_URL
              value: http://minio:9000
            - name: POSTGRES_DB
              value: datamed
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_USER
              value: postgres
            - name: TOKEN_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: TOKEN_KEY
          image: datamed-backend:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health
              port: 5000
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 5000
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          name: backend
          ports:
            - containerPort: 5000
              protocol: TCP
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts:
            - mountPath: /app/logs
              name: backend-logs
            - mountPath: /run/secrets/app
              name: app-secrets
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: backend-logs
          persistentVolumeClaim:
            claimName: backend-logs
        - name: app-secrets
          secret:
            secretName: app-secrets
