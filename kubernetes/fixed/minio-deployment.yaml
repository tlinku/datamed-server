apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes/
    kompose.service.expose: minio.datamed.local
    kompose.service.expose.tls-secret: datamed-tls
    kompose.version: 1.36.0 (HEAD)
  labels:
    io.kompose.service: minio
  name: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: minio
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes/
        kompose.service.expose: minio.datamed.local
        kompose.service.expose.tls-secret: datamed-tls
        kompose.version: 1.36.0 (HEAD)
      labels:
        io.kompose.service: minio
    spec:
      containers:
        - env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: MINIO_ACCESS_KEY
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: MINIO_SECRET_KEY
          image: minio/minio
          command: ["minio"]
          args: ["server", "/data", "--console-address", ":9001"]
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
          name: minio
          ports:
            - containerPort: 9000
              protocol: TCP
            - containerPort: 9001
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: minio-data
      restartPolicy: Always
      volumes:
        - name: minio-data
          persistentVolumeClaim:
            claimName: minio-data
